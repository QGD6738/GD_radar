C51 COMPILER V9.60.0.0   MAIN                                                              08/04/2020 09:19:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\Main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\WorkSpace\7_S
                    -WM\T50\T50更改长鸣报警程序\HCXY_T50_EFM8BB21F16G-C-QFN20\src\Main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVE
                    -L(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\WorkSpace\7_SWM\T50\T50更改
                    -长鸣报警程序\HCXY_T50_EFM8BB21F16G-C-QFN20\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/sha
                    -red/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB2/inc) REGFILE(HCXY_T50_EFM8B
                    -B21F16G-C-QFN20.ORC) PRINT(.\src\Main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Main.OBJ)

line level    source

   1          /*********************************************************************************************************
             -************
   2          ** FILE NAME: Main.c
   3          **
   4          ** PROJECT:  HCXY_X30_RADAR
   5          ** CPU:      EFM8BB21F16G
   6          ** COMPILER: SILICON
   7          ** -------------------------------------------------------------------------------------------------------
             -------------
   8          ** VERSION:  V0.1
   9          ** DATE:     2019.02.21
  10          **********************************************************************************************************
             -***********/
  11          #include "Cpu.h"
  12          #include "Adc.h"
  13          #include "InitDevice.h"
  14          #include "Timer.h"
  15          #include "Uart.h"
  16          #include "Serial.h"
  17          #include "Command.h"
  18          #include "DetectObj.h"
  19          #include "EFM8BB2_FlashPrimitives.h"
  20          
  21          //-----------------------------------------------------------------------------
  22          // SiLabs_Startup() Routine
  23          // ----------------------------------------------------------------------------
  24          // This function is called immediately after reset, before the initialization
  25          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  26          // useful place to disable the watchdog timer, which is enable by default
  27          // and may trigger before main() in some instances.
  28          //-----------------------------------------------------------------------------
  29          
  30          //-----------------------------------------------------------------------------
  31          // Global Variables
  32          //-----------------------------------------------------------------------------
  33          #define BUFFER_LENGTH  5
  34          SI_SEGMENT_VARIABLE(buffer[BUFFER_LENGTH], uint8_t, SI_SEG_XDATA);
  35          SI_SEGMENT_VARIABLE(errorCount, uint32_t, SI_SEG_XDATA) = 0;
  36          
  37          void SiLabs_Startup (void)
  38          {
  39   1      }
  40          
  41          void InitGlobalVariable(void)
  42          {
  43   1              BYTE i;
  44   1          InitUart1AllVar();
  45   1      
  46   1          DetObj_InitVariable();
  47   1          DetObj_InitAllChannelDistance();
  48   1          //bSensorCheckFlag = FALSE;
C51 COMPILER V9.60.0.0   MAIN                                                              08/04/2020 09:19:06 PAGE 2   

  49   1          //wSensorCheckTime = 300;
  50   1          //b50msFlag = FALSE;
  51   1          //DetInfo.bID  = ID_RL;
  52   1          //DetInfo.bDetSnNum = ID_SUM;
  53   1          
  54   1      
  55   1          for(i=0;i<DetInfo.bDetSnNum;i++)
  56   1          {
  57   2              Cmd.bSensorErrCnt[i] = 0;
  58   2                      Cmd.bDistance[i] = 0xFF;
  59   2          }
  60   1              Cmd.CmdStatus = MST_DRV_SENSOR;
  61   1              Cmd.wWaitTime = 0;
  62   1              /*
  63   1              Cmd.bBuzzerInfo = 
  64   1          Cmd.bObsorient[] = 
  65   1          Cmd.bOverCnt[] = 
  66   1              Cmd.bSensorRun[] = 
  67   1              Cmd.bUsedSnrNUM = 
  68   1              Cmd.bVechInfoErrCnt = 
  69   1              Cmd.CmdCalibration = 
  70   1              Cmd.wBackData = 
  71   1              */
  72   1      
  73   1      }
  74          
  75          BYTE Debug_RD1 = 0x00,Debug_RD2 = 0;
  76          void main (void)
  77          {
  78   1              Cpu_Clk_Init();
  79   1              Cpu_InitHardwarePort();
  80   1              Cpu_WDG_Init(FUN_ON);
  81   1              Time_InitTheDelayTimer();
  82   1              Time_Init1msTimer();                    /* Initial the system timer: 1ms timer. */
  83   1              Time_Init32msTimer();           /* Initial the 32ms timer for echo detecting. */
  84   1              InitGlobalVariable();
  85   1              ADC_InitVariable();
  86   1              Time_InitVariable();
  87   1              UART1_Init();
  88   1              Cpu_EnableInterrupt();
  89   1              Delay1ms(200);
  90   1              Delay1ms(300);
  91   1      
  92   1              //Selfcheck
  93   1      //      while(wSensorCheckTime)
  94   1      //      {
  95   1      //        if(bTimeFlag)
  96   1      //        {
  97   1      //            bTimeFlag = FALSE;
  98   1      //            DetObj_DetTheObj();
  99   1      //            wSensorCheckTime--;
 100   1      //            CLR_WDT;
 101   1      //        }
 102   1      //      }
 103   1              //bSensorCheckFlag = FALSE;
 104   1              DetObj_InitAllChannelDistance();
 105   1      
 106   1              while (1)
 107   1              {
 108   2                      if (bTimeFlag /*&& ADC.Power_OK_Flag*/)
 109   2                      {
 110   3                              bTimeFlag = FALSE;
 111   3                              DetObj_DetTheObj();
C51 COMPILER V9.60.0.0   MAIN                                                              08/04/2020 09:19:06 PAGE 3   

 112   3                              if(DetInfo.bID  == ID_MASTER)
 113   3                              {
 114   4      #ifdef SPEAKER_USED
                                              Spk_DriveTheSpeaker();
              #endif
 117   4                              }
 118   3      
 119   3                      }
 120   2      //              if(b50msFlag)
 121   2      //              {
 122   2      //                      b50msFlag = FALSE;
 123   2      //                      /* Add adc detect code... */
 124   2      //                      ADC_PowerSample();
 125   2      //              }
 126   2      
 127   2      //              Cmd_SendDistancetoBCM();
 128   2      //              Delay1ms(100);
 129   2      //              Delay1ms(100);
 130   2      
 131   2      
 132   2                      CLR_WDT;
 133   2              }
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    132    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
