C51 COMPILER V9.60.0.0   CPU                                                               08/08/2020 16:35:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CPU
OBJECT MODULE PLACED IN .\src\Cpu.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\WorkSpace\3_C
                    -HAN\4_M80\1_CODE\DFSK-F516-EFM8BB21F16G-C-QFN20_20200107\src\Cpu.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL
                    -(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\WorkSpace\3_CHAN\4_M80\1_COD
                    -E\DFSK-F516-EFM8BB21F16G-C-QFN20_20200107\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shar
                    -ed/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB2/inc) REGFILE(DFSK-F516-EFM8B
                    -B21F16G-C-QFN20_20200107.ORC) PRINT(.\src\Cpu.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Cpu.OBJ)

line level    source

   1          /*********************************************************************************************************
             -************
   2          ** FILE NAME: cpu.c
   3          **
   4          ** PROJECT:  DFSK_F516_RADAR
   5          ** CPU:      EFM8BB21F16G
   6          ** COMPILER: SILICON
   7          ** -------------------------------------------------------------------------------------------------------
             -------------
   8          ** VERSION:  V0.1
   9          ** DATE:     2019.01.28
  10          **********************************************************************************************************
             -***********/
  11          #include <SI_EFM8BB2_Register_Enums.h>                  // SFR declarations
  12          #include "cpu.h"
  13          #include "ADC.h"
  14          #include "Timer.h"
  15          
  16          BYTE SFRPAGE_TEMP = 0;
  17          
  18          void Cpu_Clk_Init (void)
  19          {
  20   1              SFRPAGE = 0x10;
  21   1              PFE0CN = PFE0CN_PFEN__ENABLED | PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
  22   1      
  23   1              SFRPAGE = 0x00;
  24   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  25   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  26   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY);
  27   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  28   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  29   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY);
  30   1      
  31   1      }
  32          
  33          
  34          void Cpu_WDG_Init(BOOL Switch)//The total interrupt needs to be closed when invoked
  35          {
  36   1              SFRPAGE = 0x00;
  37   1              if(Switch == FUN_ON)
  38   1              {
  39   2                      WDTCN = 0x02;//T LFOSC × 4^(WDTCN[2:0]+3) //T LFOSC = 80khz = 12.5us  so: WDTCN[2:0]=4，over is 204.8ms
  40   2                      WDTCN = 0xFF;//lock the wdt
  41   2              }
  42   1              if(Switch == FUN_OFF)
  43   1              {
  44   2                      WDTCN = 0xDE;
  45   2                      WDTCN = 0xAD;
  46   2              }
  47   1      }
  48          
C51 COMPILER V9.60.0.0   CPU                                                               08/08/2020 16:35:49 PAGE 2   

  49          void Cpu_EnableInterrupt (void)
  50          {
  51   1              IE_EA = 1;       //开启总中断
  52   1      }
  53          
  54          void Cpu_DisableInterrupt (void)
  55          {
  56   1              IE_EA = 0;       //关闭总中断
  57   1      }
  58          
  59          void Cpu_InitHardwarePort(void)
  60          {
  61   1              SFRPAGE = 0x00;
  62   1      
  63   1              P0          = 0x6D; //P0.0 is adc VDD_REF;               P0.1 is GND_REF;           P0.2 is NULL;     P0.3 is POWER_AD;
  64   1                                              //P0.4 is ID_TX;             P0.5 is ID_IN;             P0.6 is ECHO;     P0.7 is UART1_TX;
  65   1              P0MDOUT =  P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DR
             -AIN
  66   1                               | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__PUSH_PULL;
  67   1              P0MDIN  =  P0MDIN_B0__ANALOG  | P0MDIN_B1__ANALOG  | P0MDIN_B2__ANALOG  | P0MDIN_B3__ANALOG
  68   1                               | P0MDIN_B4__DIGITAL | P0MDIN_B5__ANALOG  | P0MDIN_B6__ANALOG | P0MDIN_B7__DIGITAL;
  69   1              P0SKIP  =  P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED | P0SKIP_B3__SKIPPED
  70   1                               | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__NOT_SKIPPED;
  71   1      
  72   1      
  73   1              P1          = 0x41;//P1.0 is UART1_RX;     P1.1 is NULL;  P1.2 is NULL;      P1.3 is NULL;
  74   1                                         //P1.4 is NULL;  P1.5 is DRIVE_L;  P1.6 is DRIVE_H;
  75   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__PUSH_PUL
             -L
  76   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__PUSH_PULL  | P1MDOUT_B6__PUSH_PULL  | P1MDOUT_B7__PUSH_PULL;
  77   1              P1MDIN =  P1MDIN_B0__DIGITAL     | P1MDIN_B1__DIGITAL     | P1MDIN_B2__DIGITAL     | P1MDIN_B3__DIGITAL
  78   1                              | P1MDIN_B4__DIGITAL     | P1MDIN_B5__DIGITAL     | P1MDIN_B6__ANALOG      | P1MDIN_B7__DIGITAL;
  79   1              P1SKIP =  P1SKIP_B0__NOT_SKIPPED     | P1SKIP_B1__SKIPPED     | P1SKIP_B2__SKIPPED     | P1SKIP_B3__SKIPP
             -ED
  80   1                              | P1SKIP_B4__SKIPPED     | P1SKIP_B5__SKIPPED     | P1SKIP_B6__SKIPPED;
  81   1      
  82   1      
  83   1              XBR0 = XBR0_URT0E__DISABLED| XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
  84   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
  85   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
  86   1      
  87   1              XBR1 = XBR1_PCA0ME__DISABLED | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
  88   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
  89   1      
  90   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_DISABLED | XBR2_XBARE__ENABLED
  91   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__ENABLED
  92   1                              | XBR2_URT1CTSE__ENABLED;
  93   1      //      DATA_LOW;
  94   1              }
  95          
  96          
  97          void Cpu_Init_Vect(void)
  98          {
  99   1      
 100   1      }
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    102    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   CPU                                                               08/08/2020 16:35:49 PAGE 3   

   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
