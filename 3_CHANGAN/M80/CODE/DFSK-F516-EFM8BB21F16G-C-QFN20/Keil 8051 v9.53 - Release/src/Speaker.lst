C51 COMPILER V9.60.0.0   SPEAKER                                                           08/08/2020 16:35:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SPEAKER
OBJECT MODULE PLACED IN .\src\Speaker.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\WorkSpace\3_C
                    -HAN\4_M80\1_CODE\DFSK-F516-EFM8BB21F16G-C-QFN20_20200107\src\Speaker.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\WorkSpace\3_CHAN\4_M80\1
                    -_CODE\DFSK-F516-EFM8BB21F16G-C-QFN20_20200107\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/
                    -shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB2/inc) REGFILE(DFSK-F516-E
                    -FM8BB21F16G-C-QFN20_20200107.ORC) PRINT(.\src\Speaker.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Speaker.OBJ)

line level    source

   1          #include        "Cpu.h"
   2          #include        "Speaker.h"
   3          #include        "DetectObj.h"
   4          stSpeaker       xdata Speaker;
   5          
   6          void    Spk_InitHardware (void)
   7          {
   8   1              SPEAKER_PORT_DIR_OUT;
   9   1              SPEAKER_PORT = V_HIGH;
  10   1      }
  11          
  12          void    Spk_InitVariable (void)
  13          {
  14   1              Speaker.WarningType = SPEAKER_TYPE_NONE;
  15   1              Speaker.WarningPeriod = SPEAKER_PERIOD_0HZ;
  16   1              Speaker.bContinous = TRUE;
  17   1              Speaker.Counter = 0;
  18   1      }
  19          
  20          void    Spk_DriveTheSpeaker (void)
  21          {
  22   1              BYTE WarningClass = NearestData.bNearestDistance;
  23   1      
  24   1              if(WarningClass > SPEAKER_MAX_DISTANCE_2HZ)
  25   1              {
  26   2                      WarningClass = SPEAKER_TYPE_NONE;
  27   2              }
  28   1              else if(WarningClass > SPEAKER_MAX_DISTANCE_4HZ)
  29   1              {
  30   2                      WarningClass = SPEAKER_TYPE_2HZ;
  31   2              }
  32   1              else if(WarningClass > SPEAKER_MAX_DISTANCE_CONTIN)
  33   1              {
  34   2                      WarningClass = SPEAKER_TYPE_4HZ;
  35   2              }
  36   1              else
  37   1              {
  38   2                      WarningClass = SPEAKER_TYPE_CONTIN;
  39   2              }
  40   1      
  41   1              Speaker.Counter ++;
  42   1              if(WarningClass != Speaker.WarningType &&
  43   1                 Speaker.Counter >= Speaker.WarningPeriod)
  44   1              {
  45   2                      if(WarningClass == SPEAKER_TYPE_NONE)
  46   2                      {
  47   3                              Speaker.Counter = 0;
  48   3                              Speaker.WarningPeriod = SPEAKER_PERIOD_0HZ;
  49   3                              Speaker.bContinous = TRUE;
  50   3                              SPEAKER_PORT = V_HIGH;
  51   3                      }
C51 COMPILER V9.60.0.0   SPEAKER                                                           08/08/2020 16:35:50 PAGE 2   

  52   2                      else if(WarningClass == SPEAKER_TYPE_2HZ)
  53   2                      {
  54   3                              Speaker.Counter = 0;
  55   3                              Speaker.WarningPeriod = SPEAKER_PERIOD_2HZ;
  56   3                              Speaker.bContinous = FALSE;
  57   3                      }
  58   2                      else if(WarningClass == SPEAKER_TYPE_4HZ)
  59   2                      {
  60   3                              Speaker.Counter = 0;
  61   3                              Speaker.WarningPeriod = SPEAKER_PERIOD_4HZ;
  62   3                              Speaker.bContinous = FALSE;
  63   3                      }
  64   2                      else if(WarningClass == SPEAKER_TYPE_CONTIN)
  65   2                      {
  66   3                              Speaker.Counter = 0;
  67   3                              Speaker.WarningPeriod = SPEAKER_PERIOD_0HZ;
  68   3                              Speaker.bContinous = TRUE;
  69   3                              SPEAKER_PORT = V_LOW;
  70   3                      }
  71   2                      Speaker.WarningType = WarningClass;
  72   2              }
  73   1              if(!Speaker.bContinous)
  74   1              {
  75   2                      if(Speaker.Counter >= Speaker.WarningPeriod)
  76   2                      {
  77   3                              SPEAKER_PORT = !SPEAKER_PORT;
  78   3                              Speaker.Counter = 0;
  79   3                      }
  80   2              }
  81   1      
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
